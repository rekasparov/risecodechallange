// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RISE.Entity;

namespace RISE.Entity.Migrations
{
    [DbContext(typeof(RISETESTDBContext))]
    [Migration("20211023120553_DeleteContactTypeTable")]
    partial class DeleteContactTypeTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Turkish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RISE.Entity.Person", b =>
                {
                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UUID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("RISE.Entity.PersonContact", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PersonId");

                    b.ToTable("PersonContact");
                });

            modelBuilder.Entity("RISE.Entity.Report", b =>
                {
                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("UUID");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("RISE.Entity.ReportDetail", b =>
                {
                    b.Property<Guid>("ReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PersonCount")
                        .HasColumnType("int");

                    b.Property<int>("PhoneNumberCount")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.ToTable("ReportDetail");
                });

            modelBuilder.Entity("RISE.Entity.PersonContact", b =>
                {
                    b.HasOne("RISE.Entity.Person", "Person")
                        .WithOne("PersonContact")
                        .HasForeignKey("RISE.Entity.PersonContact", "PersonId")
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RISE.Entity.ReportDetail", b =>
                {
                    b.HasOne("RISE.Entity.Report", "Report")
                        .WithMany("ReportDetails")
                        .HasForeignKey("ReportId")
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("RISE.Entity.Person", b =>
                {
                    b.Navigation("PersonContact");
                });

            modelBuilder.Entity("RISE.Entity.Report", b =>
                {
                    b.Navigation("ReportDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
